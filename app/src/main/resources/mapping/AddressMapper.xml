<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.app.mapper.AddressMapper">
  <resultMap id="BaseResultMap" type="com.example.app.model.Address">
    <!--@mbg.generated-->
    <id column="aid" jdbcType="INTEGER" property="aid" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="consigneetel" jdbcType="VARCHAR" property="consigneetel" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="add_status" jdbcType="INTEGER" property="addStatus" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    aid, consignee, consigneetel, province_id, city_id, area_id, detail, add_status,
    userid
  </sql>

  <select id="getaddress" resultMap="getaddressresp">
    SELECT a.aid,a.consignee,a.consigneetel,pp.province_name,pc.city_name,pa.area_name,a.detail,a.add_status
    FROM address a inner join pca_provinces pp,pca_cities pc,pca_areas pa
    WHERE a.province_id=pp.province_id and a.city_id=pc.city_id and a.area_id=pa.area_id and
    a.aid=#{param1,jdbcType=INTEGER} and a.userid=#{param2,jdbcType=INTEGER}
  </select>
  <resultMap id="getaddressresp" type="com.example.app.model.Address">
    <id column="aid" jdbcType="INTEGER" property="aid"/>
    <result column="consignee" jdbcType="VARCHAR" property="consignee"/>
    <result column="consigneetel" jdbcType="VARCHAR" property="consigneetel"/>
    <result column="detail" jdbcType="VARCHAR" property="detail"/>
    <result column="add_status" jdbcType="INTEGER" property="addStatus"/>
    <association property="pcaProvinces" javaType="com.example.app.model.PcaProvinces">
      <result column="province_name" jdbcType="VARCHAR" property="provinceName"/>
    </association>
    <association property="pcaCities" javaType="com.example.app.model.PcaCities">
      <result column="city_name" jdbcType="VARCHAR" property="cityName"/>
    </association>
    <association property="pcaAreas" javaType="com.example.app.model.PcaAreas">
      <result column="area_name" jdbcType="VARCHAR" property="areaName"/>
    </association>
  </resultMap>

  <select id="getAlladdress" parameterType="java.lang.Integer" resultMap="getAlladdressresp">
    <!--@mbg.generated-->
    SELECT a.aid,a.consignee,a.consigneetel,pp.province_name,pc.city_name,pa.area_name,a.detail,a.add_status
    FROM address a inner join pca_provinces pp,pca_cities pc,pca_areas pa
    WHERE a.province_id=pp.province_id and a.city_id=pc.city_id and a.area_id=pa.area_id and a.userid=#{userid,jdbcType=INTEGER}
    ORDER BY a.add_status desc
  </select>
  <resultMap id="getAlladdressresp" type="com.example.app.model.Address">
    <id column="aid" jdbcType="INTEGER" property="aid"/>
    <result column="consignee" jdbcType="VARCHAR" property="consignee"/>
    <result column="consigneetel" jdbcType="VARCHAR" property="consigneetel"/>
    <result column="detail" jdbcType="VARCHAR" property="detail"/>
    <result column="add_status" jdbcType="INTEGER" property="addStatus"/>
    <association property="pcaProvinces" javaType="com.example.app.model.PcaProvinces">
      <result column="province_name" jdbcType="VARCHAR" property="provinceName"/>
    </association>
    <association property="pcaCities" javaType="com.example.app.model.PcaCities">
      <result column="city_name" jdbcType="VARCHAR" property="cityName"/>
    </association>
    <association property="pcaAreas" javaType="com.example.app.model.PcaAreas">
      <result column="area_name" jdbcType="VARCHAR" property="areaName"/>
    </association>
  </resultMap>
















  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from address
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from address
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="aid" keyProperty="aid" parameterType="com.example.app.model.Address" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into address (consignee, consigneetel, province_id,
    city_id, area_id, detail,
    add_status, userid)
    values (#{consignee,jdbcType=VARCHAR}, #{consigneetel,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER},
    #{cityId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR},
    #{addStatus,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="aid" keyProperty="aid" parameterType="com.example.app.model.Address" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="consignee != null">
        consignee,
      </if>
      <if test="consigneetel != null">
        consigneetel,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="addStatus != null">
        add_status,
      </if>
      <if test="userid != null">
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneetel != null">
        #{consigneetel,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="addStatus != null">
        #{addStatus,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.app.model.Address">
    <!--@mbg.generated-->
    update address
    <set>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneetel != null">
        consigneetel = #{consigneetel,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="addStatus != null">
        add_status = #{addStatus,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.app.model.Address">
    <!--@mbg.generated-->
    update address
    set consignee = #{consignee,jdbcType=VARCHAR},
    consigneetel = #{consigneetel,jdbcType=VARCHAR},
    province_id = #{provinceId,jdbcType=INTEGER},
    city_id = #{cityId,jdbcType=INTEGER},
    area_id = #{areaId,jdbcType=INTEGER},
    detail = #{detail,jdbcType=VARCHAR},
    add_status = #{addStatus,jdbcType=INTEGER},
    userid = #{userid,jdbcType=INTEGER}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>